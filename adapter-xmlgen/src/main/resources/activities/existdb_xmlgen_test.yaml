description: |
  This is for testing

scenarios:
  xmlgen:
    test:    run driver=xmlgen tags==block:"gentest.*", cycles===100 seq=interval threads=auto errors=timer,warn directorypath=./target/xml-generated-test xmlroot=site

bindings:
  xml_file_id: FixedValue(1)

  # Use the MVEL features http://mvel.documentnode.com/#simple-property-expression to relate values
  # _current value is the _initial value, plus the sum of the _bid_values
  #
  oauction_initial: Zipf(10000,1.0); SaveLong('oauction_initial'); SaveLong('oauction_bid')
  oauction_reserve: HashRange(50,1500); SaveLong('oauction_reserve'); Expr('oauction_initial + oauction_reserve')
  oauction_bid_values: ListSizedStepped(HashInterval(0,5), LongFlow(HashRange(50,500) -> long, SaveLong('oauction_increase'), Expr('oauction_increase + oauction_bid') -> long, SaveLong('oauction_bid'), Expr('oauction_increase') -> long)))
  ouaction_current: Expr('oauction_bid')
  oauction_person: ListSizedStepped(HashInterval(0,5), LongFlow(HashRange(1,TEMPLATE(personcount))))

blocks:

  gentest:
    ops:
      generate-test:
        op: >2
          "generate test op - required by the system - we don't use it"
        cycle: "{{Identity()}}"
        file: "{xml_file_id}"
        path: ["element1", "element2"]
        __attrs: { id: "test{{Identity()}}"
        }
        __children: {
          initial: "{oauction_initial}",
          reserve: "{oauction_reserve}",
          bidder: {
            __foreach: {
              increase: "{oauction_bid_values}",
              person: "{oauction_person}"
            },
            increase: "[increase]",
            personref: {
              __attrs: {
                person: "person[person]"
              }
            }
          },
          current: "{ouaction_current}",
        }


